@model MovieApp.Model.User

@{
    ViewBag.Title = "Registrer";

}

<script type="text/javascript">
    $(function () {

        $("#postnummer").keyup(function () {
            var postNrInn = $("#postnummer").val();

            if (postNrInn.length == 4) {
                $.ajax({
                    url: '/Home/getZipCode',
                    type: 'POST',
                    data: { postnummer: postNrInn },
                    dataType: 'json',
                    success: function (poststed) {
                        VisInfo(poststed);
                    },
                    error: function (x, y, z) {
                        alert(x + '\n' + y + '\n' + z);
                    }
                });
            }
        })

        $("#registrer").click(function () {

        })
    })

    function VisInfo(poststed) {
        var utStreng = poststed;
        $("#visInfo").html(utStreng);
    }

</script>

<h2 id="overskrifterSomSkalBliMindre" class="col-xs-offset-4 col-sm-offset-4 col-md-offset-4 col-lg-offset-4">Endre Bruker!</h2>
<hr />

<div class="container">
    <div id="rammeverkForRegisterer">
        <br /><br />

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

              <div class="form-horizontal">
                  <hr />
                  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.EditorFor(model => model.fornavn, new { htmlAttributes = new { @class = "form-control", placeholder = "Fornavn" } })
                          <div class="col-xs-7 col-xs-offset-0 col-sm-6 col-sm-offset-0 col-md-11 col-md-offset-0 col-lg-offset-0 col-lg-10">
                              @Html.ValidationMessageFor(model => model.fornavn, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.EditorFor(model => model.etternavn, new { htmlAttributes = new { @class = "form-control", placeholder = "Etternavn" } })
                          <div class="col-xs-7 col-xs-offset-0 col-sm-6 col-sm-offset-0 col-md-11 col-md-offset-0 col-lg-offset-0 col-lg-10">
                              @Html.ValidationMessageFor(model => model.etternavn, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.EditorFor(model => model.adresse, new { htmlAttributes = new { @class = "form-control", placeholder = "Adresse" } })
                          <div class="col-xs-7 col-xs-offset-0 col-sm-6 col-sm-offset-0 col-md-11 col-md-offset-0 col-lg-offset-0 col-lg-10">
                              @Html.ValidationMessageFor(model => model.adresse, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.EditorFor(model => model.postnr, new { htmlAttributes = new { @class = "form-control", @id = "postnummer", placeholder = "Postnummer", autocomplete = "off", maxlength = "4" } })
                          <div class="col-xs-7 col-xs-offset-0 col-sm-6 col-sm-offset-0 col-md-11 col-md-offset-0 col-lg-offset-0 col-lg-10">
                              @Html.ValidationMessageFor(model => model.postnr, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-4 col-sm-10 col-sm-offset-4 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          <div id="visInfo">

                          </div>
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.EditorFor(model => model.epost, new { htmlAttributes = new { @class = "form-control", placeholder = "E-post" } })
                          <div class="col-xs-7 col-xs-offset-0 col-sm-6 col-sm-offset-0 col-md-11 col-md-offset-0 col-lg-offset-0 col-lg-10">
                              @Html.ValidationMessageFor(model => model.epost, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.EditorFor(model => model.epostBekreftelse, new { htmlAttributes = new { @class = "form-control", placeholder = "Bekreft e-post", autocomplete = "off" } })
                          <div class="col-xs-7 col-xs-offset-0 col-sm-6 col-sm-offset-0 col-md-11 col-md-offset-0 col-lg-offset-0 col-lg-10">
                              @Html.ValidationMessageFor(model => model.epostBekreftelse, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.EditorFor(model => model.passord, new { htmlAttributes = new { @class = "form-control", placeholder = "Passord", type = "password" } })
                          @Html.ValidationMessageFor(model => model.passord, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.EditorFor(model => model.passordBekreftelse, new { htmlAttributes = new { @class = "form-control", placeholder = "Bekreft Passord", type = "password" } })
                          <div class="col-xs-7 col-xs-offset-0 col-sm-6 col-sm-offset-0 col-md-11 col-md-offset-0 col-lg-offset-0 col-lg-10">
                              @Html.ValidationMessageFor(model => model.passordBekreftelse, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>


                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-3 col-sm-10 col-sm-offset-3 col-md-3 col-md-offset-4 col-lg-3 col-lg-offset-4">
                          @Html.DropDownListFor(model => model.accessLevel, new List<SelectListItem> {new SelectListItem{ Text="Admin", Value = "Admin" },
                                new SelectListItem{ Text="User", Value = "User" }}, "--Select access level--", new { @class = "form-control" })
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-xs-10 col-xs-offset-4 col-sm-10 col-sm-offset-4 col-md-3 col-md-offset-0 col-lg-3 col-lg-offset-4">
                          <input type="submit" value="Save" class="btn-lg btn-success" />
                          <h3>
                              @Html.ActionLink("Back to List", "UserList")
                              <br>
                          </h3>
                      </div>
                  </div>
              </div>

        }

        @try
        {
            <p>@Model.errorMessage</p>
        }
        catch (Exception e)
        {

        }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

    </div>
</div>

